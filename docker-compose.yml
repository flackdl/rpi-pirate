version: '2.4'

services:
  transmission:
    image: haugene/transmission-openvpn
    cap_add:
      - NET_ADMIN
    devices:
      - "/dev/net/tun"
    restart: always
    ports:
      - "9091:9091"
      - "8888:8888"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOST_DOWNLOAD_PATH}:/data
    env_file:
      - .env
    environment:
      - PUID=1000
      - PGID=1000
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60 --pull-filter ignore ping
      - LOCAL_NETWORK=192.168.1.0/24
    logging:
      options:
        max-size: 1m

  proxy:
    image: haugene/transmission-openvpn-proxy
    restart: always
    depends_on:
      - transmission
    links:
      - transmission
    ports:
      - "8080:8080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    logging:
      options:
        max-size: 1m
    env_file:
      - .env

  jackett:
    image: linuxserver/jackett
    restart: always
    mem_limit: 200m
    labels:
      # auto update
      com.centurylinklabs.watchtower.enable: true
    ports:
      - "9117:9117"
    volumes:
      - jackett-config:/config
    logging:
      options:
        max-size: 10m

  samba:
    image: dperson/samba:armhf
    restart: always
    ports:
      - "137:137/udp"
      - "138:138/udp"
      - "139:139"
      - "445:445"
    env_file:
      - .env
    environment:
      - USERID=1000
      - GROUPID=1000
    command: -n -s "torrents;/torrents;yes;no;yes" -g "min protocol = CORE" -g "netbios name = rpi" -g "workgroup = blackhole"
    volumes:
      - /etc/localtime:/etc/localtime
      - ${HOST_DOWNLOAD_PATH}:/torrents:ro
    logging:
      options:
        max-size: 1m

  nefarious:
    labels:
      # routinely update dynamic dns (since this image has curl already installed)
      deck-chores.dyn-dns.command: curl -s "$DNS_UPDATE_URL"
      deck-chores.dyn-dns.interval: "02:00:00"
      # auto update
      com.centurylinklabs.watchtower.enable: true
    image: lardbit/nefarious
    restart: always
    ports:
      - "8000:80"
    environment:
      # https://github.com/kennethreitz/dj-database-url
      DATABASE_URL: "sqlite:////nefarious-db/db.sqlite3"
      REDIS_HOST: "redis"
      HOST_DOWNLOAD_PATH: ${HOST_DOWNLOAD_PATH:-/tmp}
      NEFARIOUS_USER: ${NEFARIOUS_USER:-admin}
      NEFARIOUS_PASS: ${NEFARIOUS_PASS:-admin}
    volumes:
      # persistent named volume for sqlite database
      - nefarious-db:/nefarious-db
    depends_on:
      - redis
      - jackett
      - celery
    logging:
      options:
        max-size: 10m

  celery:
    labels:
      # auto update
      - com.centurylinklabs.watchtower.enable=true
    image: lardbit/nefarious
    restart: always
    entrypoint: /env/bin/celery -A nefarious worker --concurrency ${NUM_CELERY_WORKERS:-0} --beat --loglevel=INFO
    environment:
      # https://github.com/kennethreitz/dj-database-url
      DATABASE_URL: "sqlite:////nefarious-db/db.sqlite3"
      REDIS_HOST: "redis"
      HOST_DOWNLOAD_PATH: ${HOST_DOWNLOAD_PATH:-/tmp}
      INTERNAL_DOWNLOAD_PATH: /downloads/completed
    volumes:
      # persistent named volume for sqlite database
      - nefarious-db:/nefarious-db
      - ${HOST_DOWNLOAD_PATH}:/downloads

    depends_on:
      - redis
    logging:
      options:
        max-size: 10m

  redis:
    image: redis
    restart: always
    mem_limit: 200m


  # auto update service
  # https://github.com/v2tec/watchtower
  watchtower:
    image: containrrr/watchtower
    restart: always
    command: --label-enable --cleanup
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=3600


  deck-chores:
    image: funkyfuture/deck-chores:1.2.0
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      options:
        max-size: 10m

  plex:
    image: linuxserver/plex
    network_mode: host
    restart: unless-stopped
    labels:
      # auto update
      com.centurylinklabs.watchtower.enable: true
    volumes:
      - plex-config:/config
      - ${HOST_DOWNLOAD_PATH}:/data
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    logging:
      options:
        max-size: 10m

  # More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    environment:
      TZ: 'America/Chicago'
      WEBPASSWORD: ${PIHOLE_PASSWORD}
    # Volumes store your data between container upgrades
    volumes:
       - pihole-etc:/etc/pihole/
       - pihole-dnsmasq:/etc/dnsmasq.d/
    dns:
      - 127.0.0.1
      - 1.1.1.1
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped        

volumes:
  nefarious-db:
  jackett-config:
  plex-config:
  pihole-etc:
  pihole-dnsmasq:
